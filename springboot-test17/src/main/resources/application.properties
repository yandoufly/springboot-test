# 数据库连接池配置
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root
# 数据库驱动，“com.mysql.jdbc.Driver”类已过时，现默认使用“com.mysql.cj.jdbc.Driver”类。
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 连接池选择：1） HikariCP是springboot默认连接池，目前性能最好。2）Druid包括很多维度的统计h和分析功能
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#问题1：Loading class `com.mysql.jdbc.Driver'. This is deprecated.
# 解决：最新驱动包中“com.mysql.jdbc.Driver”类已经过时，新的`com.mysql.cj.jdbc.Driver'通过SPI自动注册，不再需要手动加载驱动类
#问题2：The server time zone value 'ÖÐ¹ú±ê×¼Ê±¼ä' is unrecognized
# 解决1：使用root用户登录mysql后输入命令mysql> set global time_zone='+8:00'
# 解决2：在url后面加参数“serverTimezone=GMT%2B8”


# 连接池druid配置
# 参考文章：https://blog.csdn.net/justlpf/article/details/80728529
# 官方文档：https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
# 连接的初始化大小、最小、最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 获取连接最大等待时间
spring.datasource.maxWait=60000
# 间隔多久进行一次检测，检测需要关闭的空闲连接，单位毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 连接在池中的最小生存时间，单位毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 是否缓存preparedStatement，即PSCache，MySQL下建议关闭
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
# spring.datasource.useGlobalDataSourceStat=true


# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter，默认true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid22/*
#spring.datasource.druid.web-stat-filter.exclusions=/druid/*,/resources/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=100

# druid日志输出
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false


# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet，默认true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#配置监控页面的账号和密码
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#白名单和黑名单配置
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=
# 是否允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
spring.datasource.druid.aop-patterns=com.yjy.service.*,com.yjy.dao.*


# JPA 相关配置
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true